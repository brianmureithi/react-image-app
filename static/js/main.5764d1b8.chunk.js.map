{"version":3,"sources":["components/Heading.js","components/Loader.js","components/UnsplashingImage.js","App.js","reportWebVitals.js","index.js"],"names":["styled","header","h1","Loading","div","Loader","class","Img","img","UnsplashingImage","url","key","src","alt","GlobalStyle","createGlobalStyle","WrapperImage","section","App","useState","images","setImages","currentTab","setCurrentTab","useEffect","fetchImages","axios","get","process","then","res","data","className","AppBar","style","margintop","background","Tabs","value","onChange","event","Tab","label","id","aria-controls","dataLength","length","next","hasMore","loader","map","image","urls","thumb","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kcAGeA,IAAOC,OAAV,KAODD,IAAOE,GAAV,K,+lCCNR,IAAMC,EAAUH,IAAOI,IAAV,KA6DAC,EAAS,WAClB,OACI,cAACF,EAAD,UACI,sBAAKG,MAAM,eAAX,UAA0B,wBAAW,wBAAW,wBAAW,8B,uHCjEvE,IAAMC,EAAMP,IAAOQ,IAAV,KAOIC,EAAmB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,IAAKC,EAAS,EAATA,IACnC,OAAO,cAACJ,EAAD,CAAKK,IAAKF,EAAeG,IAAI,IAATF,I,+iBCD/B,IAAMG,EAAaC,YAAF,KAWXC,EAAehB,IAAOiB,QAAV,KA8DHC,MAjDf,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACNC,EADM,KACCC,EADD,OAEsBF,mBAAS,GAF/B,mBAENG,EAFM,KAEKC,EAFL,KAGbC,qBAAU,WACRC,MACG,IAEL,IAAMA,EAAc,WAGlBC,IAAMC,IAAN,UAFgB,2BAEhB,oCADkBC,8CAClB,cACCC,MAAK,SAAAC,GAAG,OAAIT,EAAU,GAAD,mBAAKD,GAAL,YAAgBU,EAAIC,YAO5C,OACE,sBAAKC,UAAU,MAAf,UAEC,cAACC,EAAA,EAAD,CAAQC,MAAO,CAACC,UAAU,GAAGC,WAAW,WAAxC,SACA,cAACC,EAAA,EAAD,CAAMC,MAAOhB,EAAYiB,SARV,SAACC,EAAOF,GACxBf,EAAce,IAOb,SACG,cAACG,EAAA,EAAD,CAAKC,MAAM,SAASC,GAAG,WAAWC,gBAAc,mBAKxD,cAAC9B,EAAD,IAEA,cAAC,IAAD,CACE+B,WAAazB,EAAO0B,OACpBC,KAAOtB,EACPuB,SAAS,EACTC,OAAQ,cAAC,EAAD,IAJV,SAKA,cAACjC,EAAD,UACKI,EAAO8B,KAAI,SAAAC,GAAK,OACZ,cAAC,EAAD,CAAkBzC,IAAKyC,EAAMC,KAAKC,OAAYF,EAAMR,eC3D9CW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5764d1b8.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Header = styled.header`\r\nmax-width:70rem;\r\nmargin:2 rem auto;\r\ntext-align:center;\r\n\r\n\r\n`;\r\nconst H1 = styled.h1`\r\nfont-family: Roboto;\r\nmargin-bottom:1em;\r\n`;\r\n\r\nexport const Heading = () => {\r\n    return (\r\n        <div>\r\n          <h1>Image Loader </h1>  \r\n          <p></p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Loading = styled.div`\r\ntext-align:center;\r\n.lds-ellipsis {\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 80px;\r\n  height: 80px;\r\n}\r\n.lds-ellipsis div {\r\n  position: absolute;\r\n  top: 33px;\r\n  width: 13px;\r\n  height: 13px;\r\n  border-radius: 50%;\r\n  background: #000;\r\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n}\r\n.lds-ellipsis div:nth-child(1) {\r\n  left: 8px;\r\n  animation: lds-ellipsis1 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(2) {\r\n  left: 8px;\r\n  animation: lds-ellipsis2 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(3) {\r\n  left: 32px;\r\n  animation: lds-ellipsis2 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(4) {\r\n  left: 56px;\r\n  animation: lds-ellipsis3 0.6s infinite;\r\n}\r\n@keyframes lds-ellipsis1 {\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n@keyframes lds-ellipsis3 {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    transform: scale(0);\r\n  }\r\n}\r\n@keyframes lds-ellipsis2 {\r\n  0% {\r\n    transform: translate(0, 0);\r\n  }\r\n  100% {\r\n    transform: translate(24px, 0);\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <Loading>\r\n            <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n        </Loading>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Img = styled.img`\r\nwidth:100%;\r\nheight:100%;\r\nobject-fit:cover;\r\n\r\n`;\r\n\r\nexport const UnsplashingImage = ({url, key}) => {\r\n    return <Img src={url} key={key} alt=\"\"/>\r\n}\r\n","import React, {useState,useEffect} from 'react';\nimport {Heading} from './components/Heading';\nimport {Loader} from './components/Loader';\nimport {UnsplashingImage} from './components/UnsplashingImage';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport {createGlobalStyle} from 'styled-components'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport {AppBar,Tabs,Tab} from '@material-ui/core'\n\nconst GlobalStyle =createGlobalStyle`\n*{\n  margin:0;\n  padding:0;\n  box-sizing:border-box;  \n}\nbody{\n  font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n\n}\n`;\nconst WrapperImage = styled.section`\nmax-width:70rem;\nmargin:4rem auto;\ndisplay:grid;\ngrid-gap:1em;\ngrid-template-columns:repeat(auto-fit, minmax(250px,1fr));\ngrid-auto-rows:300px;\n\n\n`\n\n\n\nfunction App() {\n  const [images,setImages] = useState([]);\n  const [currentTab,setCurrentTab] = useState(0);\n  useEffect(()=>{\n    fetchImages();\n     },[])\n\n  const fetchImages = () => {\n    const apiRoot = \"https://api.unsplash.com\";\n    const accessKey = process.env.REACT_APP_ACCESSKEY;\n    axios.get(`${apiRoot}/photos/random?client_id=${accessKey}&count=12`)\n    .then(res => setImages([...images, ...res.data]))\n   \n  }\n  const changeTab = (event, value) => {\n    setCurrentTab(value)\n  }\n\n  return (\n    <div className=\"App\">\n    \n     <AppBar style={{margintop:10,background:'#031f3a'}}>\n     <Tabs value={currentTab} onChange={changeTab}>\n        <Tab label=\"Images\" id=\"home-tab\" aria-controls=\"home-panel\" />\n      \n      </Tabs>\n    \n     </AppBar>\n<GlobalStyle/>\n\n<InfiniteScroll\n  dataLength ={images.length}\n  next ={fetchImages}\n  hasMore={true}\n  loader={<Loader/>} >\n<WrapperImage>\n    {images.map(image => (\n         <UnsplashingImage url={image.urls.thumb} key={image.id}/>\n     ))}\n</WrapperImage>\n\n</InfiniteScroll>\n\n\n \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}